//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\dev\cql\src\grammar\cql.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="cqlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IcqlListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.library"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLibrary([NotNull] cqlParser.LibraryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.library"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLibrary([NotNull] cqlParser.LibraryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.libraryDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLibraryDefinition([NotNull] cqlParser.LibraryDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.libraryDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLibraryDefinition([NotNull] cqlParser.LibraryDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.usingDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingDefinition([NotNull] cqlParser.UsingDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.usingDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingDefinition([NotNull] cqlParser.UsingDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.includeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncludeDefinition([NotNull] cqlParser.IncludeDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.includeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncludeDefinition([NotNull] cqlParser.IncludeDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.localIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalIdentifier([NotNull] cqlParser.LocalIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.localIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalIdentifier([NotNull] cqlParser.LocalIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.accessModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessModifier([NotNull] cqlParser.AccessModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.accessModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessModifier([NotNull] cqlParser.AccessModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.parameterDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterDefinition([NotNull] cqlParser.ParameterDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.parameterDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterDefinition([NotNull] cqlParser.ParameterDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystemDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodesystemDefinition([NotNull] cqlParser.CodesystemDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystemDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodesystemDefinition([NotNull] cqlParser.CodesystemDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.valuesetDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValuesetDefinition([NotNull] cqlParser.ValuesetDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.valuesetDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValuesetDefinition([NotNull] cqlParser.ValuesetDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodesystems([NotNull] cqlParser.CodesystemsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystems"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodesystems([NotNull] cqlParser.CodesystemsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystemIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodesystemIdentifier([NotNull] cqlParser.CodesystemIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystemIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodesystemIdentifier([NotNull] cqlParser.CodesystemIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.libraryIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLibraryIdentifier([NotNull] cqlParser.LibraryIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.libraryIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLibraryIdentifier([NotNull] cqlParser.LibraryIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeDefinition([NotNull] cqlParser.CodeDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeDefinition([NotNull] cqlParser.CodeDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.conceptDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConceptDefinition([NotNull] cqlParser.ConceptDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.conceptDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConceptDefinition([NotNull] cqlParser.ConceptDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeIdentifier([NotNull] cqlParser.CodeIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeIdentifier([NotNull] cqlParser.CodeIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codesystemId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodesystemId([NotNull] cqlParser.CodesystemIdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codesystemId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodesystemId([NotNull] cqlParser.CodesystemIdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.valuesetId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValuesetId([NotNull] cqlParser.ValuesetIdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.valuesetId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValuesetId([NotNull] cqlParser.ValuesetIdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.versionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVersionSpecifier([NotNull] cqlParser.VersionSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.versionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVersionSpecifier([NotNull] cqlParser.VersionSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeId([NotNull] cqlParser.CodeIdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeId([NotNull] cqlParser.CodeIdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSpecifier([NotNull] cqlParser.TypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSpecifier([NotNull] cqlParser.TypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.namedTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedTypeSpecifier([NotNull] cqlParser.NamedTypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.namedTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedTypeSpecifier([NotNull] cqlParser.NamedTypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.modelIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModelIdentifier([NotNull] cqlParser.ModelIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.modelIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModelIdentifier([NotNull] cqlParser.ModelIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.listTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListTypeSpecifier([NotNull] cqlParser.ListTypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.listTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListTypeSpecifier([NotNull] cqlParser.ListTypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.intervalTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalTypeSpecifier([NotNull] cqlParser.IntervalTypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.intervalTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalTypeSpecifier([NotNull] cqlParser.IntervalTypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleTypeSpecifier([NotNull] cqlParser.TupleTypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleTypeSpecifier([NotNull] cqlParser.TupleTypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleElementDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleElementDefinition([NotNull] cqlParser.TupleElementDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleElementDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleElementDefinition([NotNull] cqlParser.TupleElementDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.choiceTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChoiceTypeSpecifier([NotNull] cqlParser.ChoiceTypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.choiceTypeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChoiceTypeSpecifier([NotNull] cqlParser.ChoiceTypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] cqlParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] cqlParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.expressionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionDefinition([NotNull] cqlParser.ExpressionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.expressionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionDefinition([NotNull] cqlParser.ExpressionDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.contextDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContextDefinition([NotNull] cqlParser.ContextDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.contextDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContextDefinition([NotNull] cqlParser.ContextDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDefinition([NotNull] cqlParser.FunctionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDefinition([NotNull] cqlParser.FunctionDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.operandDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperandDefinition([NotNull] cqlParser.OperandDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.operandDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperandDefinition([NotNull] cqlParser.OperandDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] cqlParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] cqlParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.querySource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuerySource([NotNull] cqlParser.QuerySourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.querySource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuerySource([NotNull] cqlParser.QuerySourceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.aliasedQuerySource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAliasedQuerySource([NotNull] cqlParser.AliasedQuerySourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.aliasedQuerySource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAliasedQuerySource([NotNull] cqlParser.AliasedQuerySourceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias([NotNull] cqlParser.AliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias([NotNull] cqlParser.AliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.queryInclusionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryInclusionClause([NotNull] cqlParser.QueryInclusionClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.queryInclusionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryInclusionClause([NotNull] cqlParser.QueryInclusionClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.withClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithClause([NotNull] cqlParser.WithClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.withClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithClause([NotNull] cqlParser.WithClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.withoutClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithoutClause([NotNull] cqlParser.WithoutClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.withoutClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithoutClause([NotNull] cqlParser.WithoutClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.retrieve"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetrieve([NotNull] cqlParser.RetrieveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.retrieve"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetrieve([NotNull] cqlParser.RetrieveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodePath([NotNull] cqlParser.CodePathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codePath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodePath([NotNull] cqlParser.CodePathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.terminology"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminology([NotNull] cqlParser.TerminologyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.terminology"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminology([NotNull] cqlParser.TerminologyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifier([NotNull] cqlParser.QualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifier([NotNull] cqlParser.QualifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery([NotNull] cqlParser.QueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery([NotNull] cqlParser.QueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sourceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceClause([NotNull] cqlParser.SourceClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sourceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceClause([NotNull] cqlParser.SourceClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.singleSourceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleSourceClause([NotNull] cqlParser.SingleSourceClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.singleSourceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleSourceClause([NotNull] cqlParser.SingleSourceClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.multipleSourceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultipleSourceClause([NotNull] cqlParser.MultipleSourceClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.multipleSourceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultipleSourceClause([NotNull] cqlParser.MultipleSourceClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.letClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetClause([NotNull] cqlParser.LetClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.letClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetClause([NotNull] cqlParser.LetClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.letClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetClauseItem([NotNull] cqlParser.LetClauseItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.letClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetClauseItem([NotNull] cqlParser.LetClauseItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] cqlParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] cqlParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.returnClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnClause([NotNull] cqlParser.ReturnClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.returnClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnClause([NotNull] cqlParser.ReturnClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sortClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortClause([NotNull] cqlParser.SortClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sortClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortClause([NotNull] cqlParser.SortClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sortDirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortDirection([NotNull] cqlParser.SortDirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sortDirection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortDirection([NotNull] cqlParser.SortDirectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.sortByItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortByItem([NotNull] cqlParser.SortByItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.sortByItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortByItem([NotNull] cqlParser.SortByItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.qualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedIdentifier([NotNull] cqlParser.QualifiedIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.qualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedIdentifier([NotNull] cqlParser.QualifiedIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>durationBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDurationBetweenExpression([NotNull] cqlParser.DurationBetweenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>durationBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDurationBetweenExpression([NotNull] cqlParser.DurationBetweenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>inFixSetExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInFixSetExpression([NotNull] cqlParser.InFixSetExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inFixSetExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInFixSetExpression([NotNull] cqlParser.InFixSetExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>retrieveExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetrieveExpression([NotNull] cqlParser.RetrieveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>retrieveExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetrieveExpression([NotNull] cqlParser.RetrieveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timingExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimingExpression([NotNull] cqlParser.TimingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timingExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimingExpression([NotNull] cqlParser.TimingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>queryExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryExpression([NotNull] cqlParser.QueryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>queryExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryExpression([NotNull] cqlParser.QueryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotExpression([NotNull] cqlParser.NotExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotExpression([NotNull] cqlParser.NotExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpression([NotNull] cqlParser.BooleanExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpression([NotNull] cqlParser.BooleanExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpression([NotNull] cqlParser.OrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpression([NotNull] cqlParser.OrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExpression([NotNull] cqlParser.CastExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExpression([NotNull] cqlParser.CastExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] cqlParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] cqlParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>betweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBetweenExpression([NotNull] cqlParser.BetweenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>betweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBetweenExpression([NotNull] cqlParser.BetweenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>membershipExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMembershipExpression([NotNull] cqlParser.MembershipExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>membershipExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMembershipExpression([NotNull] cqlParser.MembershipExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>differenceBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDifferenceBetweenExpression([NotNull] cqlParser.DifferenceBetweenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>differenceBetweenExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDifferenceBetweenExpression([NotNull] cqlParser.DifferenceBetweenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>inequalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInequalityExpression([NotNull] cqlParser.InequalityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inequalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInequalityExpression([NotNull] cqlParser.InequalityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] cqlParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] cqlParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>existenceExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExistenceExpression([NotNull] cqlParser.ExistenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>existenceExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExistenceExpression([NotNull] cqlParser.ExistenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>impliesExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImpliesExpression([NotNull] cqlParser.ImpliesExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>impliesExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImpliesExpression([NotNull] cqlParser.ImpliesExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>termExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermExpression([NotNull] cqlParser.TermExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>termExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermExpression([NotNull] cqlParser.TermExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeExpression([NotNull] cqlParser.TypeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeExpression</c>
	/// labeled alternative in <see cref="cqlParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeExpression([NotNull] cqlParser.TypeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.dateTimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTimePrecision([NotNull] cqlParser.DateTimePrecisionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.dateTimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTimePrecision([NotNull] cqlParser.DateTimePrecisionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.dateTimeComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTimeComponent([NotNull] cqlParser.DateTimeComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.dateTimeComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTimeComponent([NotNull] cqlParser.DateTimeComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.pluralDateTimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPluralDateTimePrecision([NotNull] cqlParser.PluralDateTimePrecisionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.pluralDateTimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPluralDateTimePrecision([NotNull] cqlParser.PluralDateTimePrecisionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>additionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditionExpressionTerm([NotNull] cqlParser.AdditionExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>additionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditionExpressionTerm([NotNull] cqlParser.AdditionExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>indexedExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexedExpressionTerm([NotNull] cqlParser.IndexedExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>indexedExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexedExpressionTerm([NotNull] cqlParser.IndexedExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>widthExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWidthExpressionTerm([NotNull] cqlParser.WidthExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>widthExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWidthExpressionTerm([NotNull] cqlParser.WidthExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeUnitExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeUnitExpressionTerm([NotNull] cqlParser.TimeUnitExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeUnitExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeUnitExpressionTerm([NotNull] cqlParser.TimeUnitExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifThenElseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfThenElseExpressionTerm([NotNull] cqlParser.IfThenElseExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifThenElseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfThenElseExpressionTerm([NotNull] cqlParser.IfThenElseExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeBoundaryExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeBoundaryExpressionTerm([NotNull] cqlParser.TimeBoundaryExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeBoundaryExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeBoundaryExpressionTerm([NotNull] cqlParser.TimeBoundaryExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>elementExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementExtractorExpressionTerm([NotNull] cqlParser.ElementExtractorExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>elementExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementExtractorExpressionTerm([NotNull] cqlParser.ElementExtractorExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>conversionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConversionExpressionTerm([NotNull] cqlParser.ConversionExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conversionExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConversionExpressionTerm([NotNull] cqlParser.ConversionExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeExtentExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeExtentExpressionTerm([NotNull] cqlParser.TypeExtentExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeExtentExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeExtentExpressionTerm([NotNull] cqlParser.TypeExtentExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>predecessorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredecessorExpressionTerm([NotNull] cqlParser.PredecessorExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>predecessorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredecessorExpressionTerm([NotNull] cqlParser.PredecessorExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointExtractorExpressionTerm([NotNull] cqlParser.PointExtractorExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointExtractorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointExtractorExpressionTerm([NotNull] cqlParser.PointExtractorExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicationExpressionTerm([NotNull] cqlParser.MultiplicationExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicationExpressionTerm([NotNull] cqlParser.MultiplicationExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateExpressionTerm([NotNull] cqlParser.AggregateExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateExpressionTerm([NotNull] cqlParser.AggregateExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>durationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDurationExpressionTerm([NotNull] cqlParser.DurationExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>durationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDurationExpressionTerm([NotNull] cqlParser.DurationExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseExpressionTerm([NotNull] cqlParser.CaseExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseExpressionTerm([NotNull] cqlParser.CaseExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>powerExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPowerExpressionTerm([NotNull] cqlParser.PowerExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>powerExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPowerExpressionTerm([NotNull] cqlParser.PowerExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>successorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuccessorExpressionTerm([NotNull] cqlParser.SuccessorExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>successorExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuccessorExpressionTerm([NotNull] cqlParser.SuccessorExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>polarityExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPolarityExpressionTerm([NotNull] cqlParser.PolarityExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>polarityExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPolarityExpressionTerm([NotNull] cqlParser.PolarityExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>termExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermExpressionTerm([NotNull] cqlParser.TermExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>termExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermExpressionTerm([NotNull] cqlParser.TermExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>invocationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvocationExpressionTerm([NotNull] cqlParser.InvocationExpressionTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>invocationExpressionTerm</c>
	/// labeled alternative in <see cref="cqlParser.expressionTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvocationExpressionTerm([NotNull] cqlParser.InvocationExpressionTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.caseExpressionItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseExpressionItem([NotNull] cqlParser.CaseExpressionItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.caseExpressionItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseExpressionItem([NotNull] cqlParser.CaseExpressionItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.dateTimePrecisionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTimePrecisionSpecifier([NotNull] cqlParser.DateTimePrecisionSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.dateTimePrecisionSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTimePrecisionSpecifier([NotNull] cqlParser.DateTimePrecisionSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.relativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelativeQualifier([NotNull] cqlParser.RelativeQualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.relativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelativeQualifier([NotNull] cqlParser.RelativeQualifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.offsetRelativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOffsetRelativeQualifier([NotNull] cqlParser.OffsetRelativeQualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.offsetRelativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOffsetRelativeQualifier([NotNull] cqlParser.OffsetRelativeQualifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.exclusiveRelativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveRelativeQualifier([NotNull] cqlParser.ExclusiveRelativeQualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.exclusiveRelativeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveRelativeQualifier([NotNull] cqlParser.ExclusiveRelativeQualifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.quantityOffset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantityOffset([NotNull] cqlParser.QuantityOffsetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.quantityOffset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantityOffset([NotNull] cqlParser.QuantityOffsetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.temporalRelationship"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemporalRelationship([NotNull] cqlParser.TemporalRelationshipContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.temporalRelationship"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemporalRelationship([NotNull] cqlParser.TemporalRelationshipContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>concurrentWithIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcurrentWithIntervalOperatorPhrase([NotNull] cqlParser.ConcurrentWithIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>concurrentWithIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcurrentWithIntervalOperatorPhrase([NotNull] cqlParser.ConcurrentWithIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>includesIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncludesIntervalOperatorPhrase([NotNull] cqlParser.IncludesIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>includesIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncludesIntervalOperatorPhrase([NotNull] cqlParser.IncludesIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>includedInIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncludedInIntervalOperatorPhrase([NotNull] cqlParser.IncludedInIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>includedInIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncludedInIntervalOperatorPhrase([NotNull] cqlParser.IncludedInIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>beforeOrAfterIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeforeOrAfterIntervalOperatorPhrase([NotNull] cqlParser.BeforeOrAfterIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>beforeOrAfterIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeforeOrAfterIntervalOperatorPhrase([NotNull] cqlParser.BeforeOrAfterIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>withinIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithinIntervalOperatorPhrase([NotNull] cqlParser.WithinIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>withinIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithinIntervalOperatorPhrase([NotNull] cqlParser.WithinIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>meetsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMeetsIntervalOperatorPhrase([NotNull] cqlParser.MeetsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>meetsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMeetsIntervalOperatorPhrase([NotNull] cqlParser.MeetsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>overlapsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOverlapsIntervalOperatorPhrase([NotNull] cqlParser.OverlapsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>overlapsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOverlapsIntervalOperatorPhrase([NotNull] cqlParser.OverlapsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>startsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartsIntervalOperatorPhrase([NotNull] cqlParser.StartsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>startsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartsIntervalOperatorPhrase([NotNull] cqlParser.StartsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>endsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndsIntervalOperatorPhrase([NotNull] cqlParser.EndsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>endsIntervalOperatorPhrase</c>
	/// labeled alternative in <see cref="cqlParser.intervalOperatorPhrase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndsIntervalOperatorPhrase([NotNull] cqlParser.EndsIntervalOperatorPhraseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>invocationTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvocationTerm([NotNull] cqlParser.InvocationTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>invocationTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvocationTerm([NotNull] cqlParser.InvocationTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>literalTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralTerm([NotNull] cqlParser.LiteralTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralTerm([NotNull] cqlParser.LiteralTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>externalConstantTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternalConstantTerm([NotNull] cqlParser.ExternalConstantTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>externalConstantTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternalConstantTerm([NotNull] cqlParser.ExternalConstantTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>intervalSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalSelectorTerm([NotNull] cqlParser.IntervalSelectorTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intervalSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalSelectorTerm([NotNull] cqlParser.IntervalSelectorTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>tupleSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleSelectorTerm([NotNull] cqlParser.TupleSelectorTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleSelectorTerm([NotNull] cqlParser.TupleSelectorTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>instanceSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstanceSelectorTerm([NotNull] cqlParser.InstanceSelectorTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>instanceSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstanceSelectorTerm([NotNull] cqlParser.InstanceSelectorTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>listSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListSelectorTerm([NotNull] cqlParser.ListSelectorTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>listSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListSelectorTerm([NotNull] cqlParser.ListSelectorTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>codeSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeSelectorTerm([NotNull] cqlParser.CodeSelectorTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>codeSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeSelectorTerm([NotNull] cqlParser.CodeSelectorTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>conceptSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConceptSelectorTerm([NotNull] cqlParser.ConceptSelectorTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conceptSelectorTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConceptSelectorTerm([NotNull] cqlParser.ConceptSelectorTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedTerm([NotNull] cqlParser.ParenthesizedTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedTerm</c>
	/// labeled alternative in <see cref="cqlParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedTerm([NotNull] cqlParser.ParenthesizedTermContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanLiteral([NotNull] cqlParser.BooleanLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanLiteral([NotNull] cqlParser.BooleanLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nullLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullLiteral([NotNull] cqlParser.NullLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nullLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullLiteral([NotNull] cqlParser.NullLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] cqlParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] cqlParser.StringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberLiteral([NotNull] cqlParser.NumberLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberLiteral([NotNull] cqlParser.NumberLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>dateTimeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTimeLiteral([NotNull] cqlParser.DateTimeLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>dateTimeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTimeLiteral([NotNull] cqlParser.DateTimeLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeLiteral([NotNull] cqlParser.TimeLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeLiteral([NotNull] cqlParser.TimeLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>quantityLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantityLiteral([NotNull] cqlParser.QuantityLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>quantityLiteral</c>
	/// labeled alternative in <see cref="cqlParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantityLiteral([NotNull] cqlParser.QuantityLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.intervalSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalSelector([NotNull] cqlParser.IntervalSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.intervalSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalSelector([NotNull] cqlParser.IntervalSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleSelector([NotNull] cqlParser.TupleSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleSelector([NotNull] cqlParser.TupleSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.tupleElementSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleElementSelector([NotNull] cqlParser.TupleElementSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.tupleElementSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleElementSelector([NotNull] cqlParser.TupleElementSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.instanceSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstanceSelector([NotNull] cqlParser.InstanceSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.instanceSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstanceSelector([NotNull] cqlParser.InstanceSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.instanceElementSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstanceElementSelector([NotNull] cqlParser.InstanceElementSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.instanceElementSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstanceElementSelector([NotNull] cqlParser.InstanceElementSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.listSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListSelector([NotNull] cqlParser.ListSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.listSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListSelector([NotNull] cqlParser.ListSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.displayClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDisplayClause([NotNull] cqlParser.DisplayClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.displayClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDisplayClause([NotNull] cqlParser.DisplayClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.codeSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeSelector([NotNull] cqlParser.CodeSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.codeSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeSelector([NotNull] cqlParser.CodeSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.conceptSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConceptSelector([NotNull] cqlParser.ConceptSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.conceptSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConceptSelector([NotNull] cqlParser.ConceptSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] cqlParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] cqlParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.externalConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternalConstant([NotNull] cqlParser.ExternalConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.externalConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternalConstant([NotNull] cqlParser.ExternalConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberInvocation([NotNull] cqlParser.MemberInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberInvocation([NotNull] cqlParser.MemberInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionInvocation([NotNull] cqlParser.FunctionInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionInvocation([NotNull] cqlParser.FunctionInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>thisInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThisInvocation([NotNull] cqlParser.ThisInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>thisInvocation</c>
	/// labeled alternative in <see cref="cqlParser.invocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThisInvocation([NotNull] cqlParser.ThisInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] cqlParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] cqlParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] cqlParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] cqlParser.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.quantity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuantity([NotNull] cqlParser.QuantityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.quantity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuantity([NotNull] cqlParser.QuantityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="cqlParser.unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnit([NotNull] cqlParser.UnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="cqlParser.unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnit([NotNull] cqlParser.UnitContext context);
}
